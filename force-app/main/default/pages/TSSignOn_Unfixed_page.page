<apex:page showHeader="false" controller="TSFormController" action="{!redirectToHome}" doctype="html-5.0" cache="false">
    <apex:stylesheet value="{!URLFOR($Resource.cps_components,'/cps_components/css/jquery-ui.css')}"/>
    <c:CPS_CSS_Component ></c:CPS_CSS_Component>
    <apex:includeScript value="{!URLFOR($Resource.cps_components, '/cps_components/js/jquery-ui.js')}"/>
    <style>
    .dateerror {
        display:none;
    }
    .requirederror {
        display:none;
    }
    </style>
    <script>
    var isClicked=false;
    function checkDoubleSubmit(obj)
    {
        if (isClicked)
        { 
            return false; 
        }
        else
        {
            if(($j('[id$=firstname]').val()!="" && $j('[id$=lastname]').val()!="" && $j('[id$=middleInitial]').val().length<=25 && ($j('[id$=studentidts]').val()!="" && $j('[id$=studentidts]').val().length==6)
            && $j('[id$=txtDate]').val().length>0))
            {
                console.log("i am in");
                var isValid=true;
                if($j('[id$="TSEmail"]').val()!=="")
                {
                    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/igm;
                    if (re.test($j('[id$="TSEmail"]').val())==false)
                    {
                        isValid=false;
                    }
                }
                if($j('[id$=mobilePhonets]').val()!== "" && (typeof $j('[id$=mobilePhonets]').val()!== 'undefined')) 
                {
                    phone_number = $j('[id$=mobilePhonets]').val().replace(/\s+/g, "");
                    var validValue=phone_number.length > 9 && phone_number.match(/\(?[\d\s]{3}\)[\d\s]{3}-[\d\s]{4}$/);
                    
                    console.log("validValue "+validValue);
                    if(validValue===false)
                        isValid=false;
                }
                console.log("isValid "+isValid);
                if(isValid)
                {
                    isClicked = true; 
                    callRegisterContact();
                    console.log("isClicked  "+isClicked );
                    $j(obj).attr("disabled", "disabled");
                } 
            }
        }
    }
   </script>
   <body>
      <div class="slds-scope">
         <!-- Desktop header -->
         <div class="desktop_header_bg">
            <apex:image url="{!URLFOR($Resource.cps_components,'/cps_components/images/cps_logo.png')}"/>
         </div>
         <!-- Desktop header -->
         <div class="slds_wrap slds-m-top_xx-large slds_wrap_mobile">
            <!-- mobile header -->
            <div class="mobile_header_bg">
               <apex:image url="{!URLFOR($Resource.cps_components,'/cps_components/images/mobile_logo.png')}"/>
            </div>
            <!-- mobile header -->
            <apex:outputPanel rendered="{!renderPgMsgBox}" styleClass="custom_exception">
               <div class="slds-notify_container slds-is-relative">
                  <div class="slds-notify slds-notify_toast slds-theme_warning toast_width" role="alert">
                     <span class="slds-assistive-text">warning</span>
                     <span class="slds-icon_container slds-icon-utility-warning slds-m-right_small slds-no-flex slds-align-top" title="Description of icon when needed">
                        <svg class="slds-icon slds-icon_small" aria-hidden="true">
                           <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.slds_icons, 'utility-sprite/svg/symbols.svg#warning')}"></use>
                        </svg>
                     </span>
                     <div class="slds-notify__content">
                        <h2 class="slds-text-heading_small">
                           <apex:pageMessages ></apex:pageMessages>
                        </h2>
                     </div>
                  </div>
               </div>
            </apex:outputPanel>
            <div class="slds-page-header slds-mobile-width">
               <div class="slds-media mobile_heading_margin">
                  <div class="slds-media__figure"></div>
                  <div class="slds-media__body">
                     <h1 class="slds-page-header__title slds-truncate slds-align-middle" title="Welcome!">Welcome!</h1>
                     <p class="slds-text-body_small slds-line-height_reset">Been here before? Complete the form below so we can find your records. If this is
                        your first time with us, weâ€™ll ask a few questions after these to create your profile.
                     </p>
                     <br/>
                     <p>*Required</p>
                     <h2 class="slds-page-header__title slds-truncate slds-align-middle slds-m-top_medium" title="Talent Search Sign-on Form">Talent Search Sign-on Form</h2>
                  </div>
               </div>
            </div>
         </div>
         <div class="slds-grid slds-wrap">
            <apex:form id="tSSignOnForm" forceSSL="true" styleClass="slds-p-around_large tSSignOnForm">
                <apex:actionFunction name="callRegisterContact" action="{!registerContact}"/>
               <div class="slds-form slds-form_horizontal">
                  <fieldset class="slds-form-element slds-box rounded_corner">
                     <div class="slds-form-element__group">
                        <div class="slds-m-top_small slds-m-bottom_small form_heading slds-text-align_left form_rounded_corner">
                           <h1>
                              Personal Information
                           </h1>
                        </div>
                        <div class="slds-form-element__row">
                           <div class="slds-form-element slds-xx-small-size_1-of-1 slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left">
                              <label class="slds-form-element__label" for="firstName">First Name<abbr class="slds-required">*</abbr></label>
                              <div class="slds-form-element__control">
                                 <apex:inputText id="firstname" value="{!firstName}" maxlength="40" label="First Name" styleClass="slds-input" tabindex="1"/>
                              </div>
                           </div>
                           <div class="slds-form-element slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left slds-m-top--none mobile_row">
                              <label class="slds-form-element__label" for="birthDate">Date of Birth<abbr class="slds-required">*</abbr></label>
                              <div class="slds-form-element__control">
                                 <apex:input type="date" id="txtDate" value="{!birthDate}" label="BirthDate" styleClass="slds-input" tabindex="4"/>
                                 <span class="dateerror">Invalid Date</span>
                                 <span id="requirederr" class="requirederror">Required field</span>
                              </div>
                           </div>
                        </div>
                        <div class="slds-form-element__row">
                           <div class="slds-form-element slds-xx-small-size_1-of-1 slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left mobile_row">
                              <label class="slds-form-element__label" for="middleInitials">Middle Name</label>
                              <div class="slds-form-element__control tooltip">
                                 <apex:inputText id="middleInitial" value="{!middleInitials}" label="Middle Name" styleClass="slds-input txtOnly" maxlength="25" tabindex="2"/>
                                 <span class="tooltiptext">Allow only 25 alphabets.</span>
                              </div>
                           </div>
                           <div class="slds-form-element slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left slds-m-top--none mobile_row">
                              <label class="slds-form-element__label" for="studentId">Student ID<abbr class="slds-required">*</abbr></label>
                              <div class="slds-form-element__control">
                                 <apex:inputText value="{!studentId}" maxlength="6" id="studentidts" label="Student Id" styleClass="slds-input" tabindex="5"/>
                              </div>
                           </div>
                        </div>
                        <div class="slds-form-element__row">
                           <div class="slds-form-element slds-xx-small-size_1-of-1 slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left mobile_row">
                              <label class="slds-form-element__label" for="lastName">Last Name<abbr class="slds-required">*</abbr></label>
                              <div class="slds-form-element__control">
                                 <apex:inputText id="lastname" value="{!lastName}" maxlength="80" label="Last Name" styleClass="slds-input" tabindex="3"/>
                              </div>
                           </div>
                           <div class="slds-form-element slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left slds-m-top--none mobile_row">
                              <label class="slds-form-element__label" for="Email">Email</label>
                              <div class="slds-form-element__control">
                                 <apex:inputText id="TSEmail" value="{!email}" label="TSEmail" styleClass="slds-input" maxlength="80" tabindex="6"/>
                                 <span class="emailmsg error">Please provide a valid email address</span>
                              </div>
                           </div>
                        </div>
                        <div class="slds-form-element__row">
                           <div class="slds-form-element slds-xx-small-size_1-of-1 slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left mobile_row">
                              <label class="slds-form-element__label" for="Suffix">Suffix</label>
                              <div class="slds-form-element__control">
                                 <apex:selectList value="{!suffix}" multiselect="false" size="1" styleClass="custom_select">
                                    <apex:selectOptions value="{!suffixOptions}"></apex:selectOptions>
                                 </apex:selectList>
                              </div>
                           </div>
                           <div class="slds-form-element slds-xx-small-size_1-of-1 slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left slds-m-top_none mobile_row">
                              <label class="slds-form-element__label" for="Mobile Phone">Mobile Phone</label>
                              <div class="slds-form-element__control">
                                 <apex:inputText id="mobilePhonets" value="{!mobilePhone}" label="Mobile Phone" onkeydown="javascript:backspacerDOWN(this,event);" onkeyup="javascript:backspacerUP(this,event);" styleClass="slds-input margin_btm_custom" tabindex="7"/>
                              </div>
                           </div>
                           <div class="slds-form-element slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left slds-m-top--none slds-p-around_medium slds-p-left_none"></div>
                        </div>
                     </div>
                  </fieldset>
                  <div class="slds-form-element__row slds-m-left_none">
                     <!--  <div style="width: 40%;" class="slds-form-element slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left slds-p-around_medium slds-m-top--none slds-p-left_none slds-p-right_none custom_padding">
                        <script src='https://www.google.com/recaptcha/api.js'></script>
                        <div class="g-recaptcha" data-sitekey="6LePxF0UAAAAAFzplp3t-fr4ZjwTwZtymV551FY1"></div>
                        </div>  -->
                     <div class="slds-form-element slds-small-size_1-of-2 slds-size_1-of-1 slds-float_left slds-m-top--none slds-p-around_medium slds-p-left_none">
                        <!--<apex:commandButton action="{!registerContact}" value="Submit" id="submit" styleClass="custom_btn" style="width:30% !important"/>-->
                        <apex:commandButton value="Next" id="submit" styleClass="custom_btn" style="width:30% !important" onclick="return checkDoubleSubmit(this);"/>
                     </div>
                  </div>
               </div>
            </apex:form>
         </div>
      </div>
      <script type="text/javascript">
         var $j = jQuery.noConflict();
         $j('[id$=tSSignOnForm]').validate();
         errorclass: "myerrorclass";
         
         $j('[id$=firstname]').rules("add", {
             required: true,
             maxlength: 40,
             messages: {
                 required: "<br/>Required field",
                 maxlength: jQuery.validator.format("<br/>First Name can not be more than 40 characters"),
             }
         });
         $j('[id$=lastname]').rules("add", {
             required: true,
             maxlength: 80,
             messages: {
                 required: "<br/>Required field",
                 maxlength: jQuery.validator.format("<br/>Last Name can not be more than 80 characters"),
             }
         });
         $j('[id$=middleInitial]').rules("add", {
             required: false,
             maxlength: 25,
             messages: {
                 required: "<br/>Required field",
                 maxlength: jQuery.validator.format("<br/>Allow only 25 character"),
             }
         });
         
         $j('[id$=mobilePhonets]').rules("add", {
             required: false,
             phoneUS: true,
             messages: {
                 required: "<br/>Required field",
                 phoneUS: jQuery.validator.format("<br/>Please enter a valid format (nnn) nnn-nnnn"),
             }
         });
         $j('[id$=studentidts]').rules("add", {
             required: true,
             maxlength: 6,
             minlength: 6,
             messages: {
                 required: "<br/>Required field",
                 maxlength: jQuery.validator.format("<br/>Student Id must be 6 digits"),
                 minlength: jQuery.validator.format("<br/>Student Id must be 6 digits"),
             }
         });
         
         
         // additional method to validate US phone no
         jQuery.validator.addMethod("phoneUS", function(phone_number, element) {
             phone_number = phone_number.replace(/\s+/g, "");
             return this.optional(element) || phone_number.length > 9 &&
                 phone_number.match(/\(?[\d\s]{3}\)[\d\s]{3}-[\d\s]{4}$/);
         }, "Please enter a valid format (nnn) nnn-nnnn");
         
         
         
         $j(document).ready(function() {
             
             // For middle initial 
             $j(".txtOnly").keypress(function(e) {
                 var key = e.keyCode;
                 if (key >= 48 && key <= 57) {
                     e.preventDefault();
                 }
             });
         
             // For email masking
             $j('[id$="TSEmail"]').blur(function() {
                 var email = $j(this).val();
                 var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/igm;
                 if (email.length != 0) {
                     if (re.test(email)) {
                         $j('.emailmsg').hide();
                     } else {
                         $j('.emailmsg').hide();
                         $j('.error').show();
                         $j('[id$="TSEmail"]').addClass("error");
                     }
                 } else if (email.length == 0) {
                     $j('.emailmsg').hide();
                     $j('[id$="TSEmail"]').removeClass("error");
                 }
             });
             
             // display error msg for invalid birthdate
             $j(document).on('change', "[id$='txtDate']", function() {
                 var dtVal = $j(this).val();
                 console.log(dtVal);
                 if (isDate(dtVal)) {
                     $j('.dateerror').hide();
                     $j('[id$=txtDate]').removeClass("inputerror");
                     $j('[id$=txtDate]').css('display', 'inline-block');
                     $j('.requirederror').hide();
                 }
                 if (!isDate(dtVal)) {
                     $j('.dateerror').show();
                     $j('[id$=txtDate]').removeClass("valid");
                     $j('[id$=txtDate]').addClass("inputerror");
                     $j('.requirederror').hide();
                     event.preventDefault();
                     
                 }
                 if (dtVal.length == 0) {
                     $j('.dateerror').hide();
                     $j('[id$=txtDate]').removeClass("inputerror");
                     $j('[id$=txtDate]').css('display', 'inline-block');
                     $j('.requirederror').hide();
                     event.preventDefault();
                 }
                 
             });
             
             // Checking StudentId will only input number value 
             $j('[id$=studentidts]').on("keypress keyup blur",function (event) {
               $j(this).val($j(this).val().replace(/[^\d].+/, ""));
                if ((event.which < 48 || event.which > 57)) {
                    
                    event.preventDefault();
                }
            });  
         
         
         });
         
         // Phone format 
         var zChar = new Array(' ', '(', ')', '-', '.');
         var maxphonelength = 13;
         var phonevalue1;
         var phonevalue2;
         var cursorposition;
         
         function ParseForNumber1(object) {
             phonevalue1 = ParseChar(object.value, zChar);
         }
         
         function ParseForNumber2(object) {
             phonevalue2 = ParseChar(object.value, zChar);
         }
         
         function backspacerUP(object, e) {
             if (e) {
                 e = e
             } else {
                 e = window.event
             }
             if (e.which) {
                 var keycode = e.which
             } else {
                 var keycode = e.keyCode
             }
         
             ParseForNumber1(object)
         
             if (keycode >= 48) {
                 ValidatePhone(object)
             }
         }
         
         function backspacerDOWN(object, e) {
             if (e) {
                 e = e
             } else {
                 e = window.event
             }
             if (e.which) {
                 var keycode = e.which
             } else {
                 var keycode = e.keyCode
             }
             ParseForNumber2(object)
         }
         
         function GetCursorPosition() {
         
             var t1 = phonevalue1;
             var t2 = phonevalue2;
             var bool = false
             for (i = 0; i < t1.length; i++) {
                 if (t1.substring(i, 1) != t2.substring(i, 1)) {
                     if (!bool) {
                         cursorposition = i
                         bool = true
                     }
                 }
             }
         }
         
         function ValidatePhone(object) {
         
             var p = phonevalue1
         
             p = p.replace(/[^\d]*/gi, "")
         
             if (p.length < 3) {
                 object.value = p
             } else if (p.length == 3) {
                 pp = p;
                 d4 = p.indexOf('(')
                 d5 = p.indexOf(')')
                 if (d4 == -1) {
                     pp = "(" + pp;
                 }
                 if (d5 == -1) {
                     pp = pp + ")";
                 }
                 object.value = pp;
             } else if (p.length > 3 && p.length < 7) {
                 p = "(" + p;
                 l30 = p.length;
                 p30 = p.substring(0, 4);
                 p30 = p30 + ")"
         
                 p31 = p.substring(4, l30);
                 pp = p30 + p31;
         
                 object.value = pp;
         
             } else if (p.length >= 7) {
                 p = "(" + p;
                 l30 = p.length;
                 p30 = p.substring(0, 4);
                 p30 = p30 + ")"
         
                 p31 = p.substring(4, l30);
                 pp = p30 + p31;
         
                 l40 = pp.length;
                 p40 = pp.substring(0, 8);
                 p40 = p40 + "-"
         
                 p41 = pp.substring(8, l40);
                 ppp = p40 + p41;
         
                 object.value = ppp.substring(0, maxphonelength);
             }
         
             GetCursorPosition()
         
             if (cursorposition >= 0) {
                 if (cursorposition == 0) {
                     cursorposition = 2
                 } else if (cursorposition <= 2) {
                     cursorposition = cursorposition + 1
                 } else if (cursorposition <= 5) {
                     cursorposition = cursorposition + 2
                 } else if (cursorposition == 6) {
                     cursorposition = cursorposition + 2
                 } else if (cursorposition == 7) {
                     cursorposition = cursorposition + 4
                     e1 = object.value.indexOf(')')
                     e2 = object.value.indexOf('-')
                     if (e1 > -1 && e2 > -1) {
                         if (e2 - e1 == 4) {
                             cursorposition = cursorposition - 1
                         }
                     }
                 } else if (cursorposition < 11) {
                     cursorposition = cursorposition + 3
                 } else if (cursorposition == 11) {
                     cursorposition = cursorposition + 1
                 } else if (cursorposition >= 12) {
                     cursorposition = cursorposition
                 }
         
                 var txtRange = object.createTextRange();
                 txtRange.moveStart("character", cursorposition);
                 txtRange.moveEnd("character", cursorposition - object.value.length);
                 txtRange.select();
             }
         
         }
         
         function ParseChar(sStr, sChar) {
             if (sChar.length == null) {
                 zChar = new Array(sChar);
             } else zChar = sChar;
         
             for (i = 0; i < zChar.length; i++) {
                 sNewStr = "";
         
                 var iStart = 0;
                 var iEnd = sStr.indexOf(sChar[i]);
         
                 while (iEnd != -1) {
                     sNewStr += sStr.substring(iStart, iEnd);
                     iStart = iEnd + 1;
                     iEnd = sStr.indexOf(sChar[i], iStart);
                 }
                 sNewStr += sStr.substring(sStr.lastIndexOf(sChar[i]) + 1, sStr.length);
         
                 sStr = sNewStr;
             }
         
             return sNewStr;
         }
         
         // Bithdate validation
         function isDate(txtDate)
         {
             var currVal = txtDate;
             if(currVal == '')
                 return false;
             
             var rxDatePattern = /^(\d{4})(\/|-)(\d{1,2})(\/|-)(\d{1,2})$/; //Declare Regex
             var dtArray = currVal.match(rxDatePattern); // is format OK?
             
             if (dtArray == null) 
                 return false;
             
             //Checks for mm/dd/yyyy format.
             dtMonth = dtArray[3];
             dtDay= dtArray[5];
             dtYear = dtArray[1];        
             
             if (dtMonth < 1 || dtMonth > 12) 
                 return false;
             else if (dtDay < 1 || dtDay> 31) 
                 return false;
             else if ((dtMonth==4 || dtMonth==6 || dtMonth==9 || dtMonth==11) && dtDay ==31) 
                 return false;
             else if (dtMonth == 2) 
             {
                 var isleap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
                 if (dtDay> 29 || (dtDay ==29 && !isleap)) 
                         return false;
             }
             return true;
         }
         
         
         // function for validating email and birthdate should not be blank while form submitting    
         $j('[id$=tSSignOnForm]').submit(function() {
             
             var email = $j("[id$='TSEmail']").val();
             var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/igm;
             if (re.test(email) || email.length == 0) {
                 console.log(1);
             }
             else if (!re.test(email) && email.length != 0){
                 $j('[id$="TSEmail"]').addClass("error");
                 console.log(2);
                 event.preventDefault();
             }
             
             var dtVal = $j('[id$=txtDate]').val();
             if (dtVal.length == 0)
             {
                 $j('.requirederror').show();
                 $j('[id$=txtDate]').addClass("inputerror");
                 event.preventDefault();
             }
             if (!isDate(dtVal))
             {
                 event.preventDefault();
             }
             
         });
     </script>
   </body>
</apex:page>